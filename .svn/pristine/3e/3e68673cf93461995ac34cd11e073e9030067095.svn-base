package controller;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import dao.SellerDaoImpl;
import dto.Seller;

@Controller
@RequestMapping("seller/Slogin")
public class SLoginController {

	private SellerDaoImpl sellerDao;

	public SLoginController setcustomerDao(SellerDaoImpl sellerDao) {
		this.sellerDao = sellerDao;
		return this;
	}
	
	@RequestMapping(method = RequestMethod.GET)
	public String form(Seller loginCommand, HttpSession session, Model model) { //session 쓰고 싶으면 넣어주면 된다. 여기서 인자 첫번째로 Member을 넣어주었기 때문에 위에 주석 처리한 부분이 필요 없다.
		
		if(session.getAttribute("authInfo") != null) {
			if(((Seller)session.getAttribute("authInfo")).getEmail() != loginCommand.getEmail()){
				return "redirect:SMain";
			}
		}else if(loginCommand != null) {
			model.addAttribute("member", loginCommand);
			return "seller/SloginForm";
		}
		return "seller/SloginForm";
	}

	// 맨처음 켰을때
	@RequestMapping(method = RequestMethod.POST)
	public String form(Seller loginCommand, Errors errors, HttpSession session, Model model) {
		if (errors.hasErrors()) {
			System.out.println("에러입니다.");
			return "seller/SloginForm";
		}
		try {
			if (sellerDao.SelectCByEmail(loginCommand.getEmail()) == null) {
				model.addAttribute("notMember", "존재하지 않는 회원입니다.");
				return "seller/SloginForm";
			}

			Seller authInfo = sellerDao.SelectCByEamilAndPw(loginCommand.getEmail(), loginCommand.getPw());
			if (authInfo == null) {
				model.addAttribute("notMember", "비밀번호가 일치하지 않습니다.");
				// throw new Exception("회원자 없음");
			}
			session.setAttribute("authInfo", authInfo);
			
			return "redirect:SMain";

		} catch (Exception e) {
			e.printStackTrace();
			return "seller/SloginForm";
		}

	}

}
